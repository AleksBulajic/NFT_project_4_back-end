# Import necessary modules from Django
from django.contrib import admin
from django.urls import include, path
from rest_framework.routers import DefaultRouter
from nftApp.views import *

# Create a router instance from DefaultRouter
router = DefaultRouter()

# Register the viewsets with the router to automatically generate URL patterns
router.register(r'identity', IdentityListCreateView)
router.register(r'users', UserViewSet)

# Define the URL patterns for the Django project
urlpatterns = [
    # Admin site URL
    path('admin/', admin.site.urls),

    # Include the URL patterns generated by the router
    path('api/', include(router.urls)),

    # URL pattern for user registration view (UserCreate)
    path('register/', UserCreate.as_view(), name='user-register'),

    # URL pattern for built-in Django REST framework authentication views (login, logout, etc.)
    path('api-auth/', include('rest_framework.urls')),

    # URL pattern for custom authentication view (CustomAuthToken) for user login
    path('login/', CustomAuthToken.as_view(), name='user-login'),

    # URL pattern for testing authentication token
    path('test-token/', test_token),

    # URL pattern for individual user retrieval, update, and deletion (UserRetrieveUpdateDestroyView)
    path('users/<int:pk>/', UserRetrieveUpdateDestroyView.as_view(), name='user-retrieve-update-destroy'),

    # URL pattern for listing and creating identity instances (IdentityListCreateView)
    path('identities/', IdentityListCreateView.as_view(actions={'get': 'list', 'post': 'create'}), name='identity-list-create'),

    # URL pattern for individual identity retrieval, update, and deletion (IdentityRetrieveUpdateDestroyView)
    path('identity/<int:pk>/', IdentityRetrieveUpdateDestroyView.as_view(), name='identity-retrieve-update-destroy')
]
